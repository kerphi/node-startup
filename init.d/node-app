#!/bin/bash
###############

# REDHAT chkconfig header

# chkconfig: - 58 74
# description: node-app is the script for starting a node app on boot.
### BEGIN INIT INFO
# Provides: node
# Required-Start:    $network $remote_fs $local_fs
# Required-Stop:     $network $remote_fs $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start and stop node
# Description: Node process for app
### END INIT INFO

# single app
NODE_ENV="production"
NODE_APP="app.js"
PORT=3000
APP_DIR="/www/example1.com";

test -f /etc/default/node-app && . /etc/default/node-app

# common
PID_DIR=$APP_DIR/pid
LOG_DIR=$APP_DIR/log
CONFIG_DIR=$APP_DIR/config

PID_FILE=$PID_DIR/app.pid
LOG_FILE=$LOG_DIR/app.log

FOREVER_EXEC=`which forever`

test -f /etc/default/node-app && . /etc/default/node-app

start_app (){
    if [ -f $PID_FILE ]
    then
        echo "$PID_FILE exists, process is already running or crashed"
        exit 1
    else
        echo "Starting node app ${APP_DIR}/${NODE_APP} ..."
        PORT=$PORT NODE_ENV=$NODE_ENV NODE_CONFIG_DIR=$CONFIG_DIR $FOREVER_EXEC start --pidFile $PID_FILE $APP_DIR/$NODE_APP
        RESULT=$?

        if [ $RESULT -eq 0 ] && [ ! -d $PID_DIR ]
        then
          echo "creating directory $PID_DIR ..."
          mkdir -p $PID_DIR
        fi
        
        if [ ! $RESULT -eq 0 ]
        then
          echo "error runnig app $APP_DIR/$NODE_APP"
        fi
    fi
}

stop_app (){
    if [ ! -f $PID_FILE ]
    then
        echo "$PID_FILE does not exist, process is not running"
        exit 1
    else
        echo -n "Stopping $APP_DIR/$NODE_APP ..."
        PORT=$PORT NODE_ENV=$NODE_ENV NODE_CONFIG_DIR=$CONFIG_DIR $FOREVER_EXEC stop $APP_DIR/$NODE_APP
        RESULT=$?
        rm -f $PID_FILE;
        
        if [ $RESULT -eq 0 ]
        then
          echo "Node stopped"
        else
          echo "error."
        fi
    fi
}

case "$1" in
    start)
      start_app
    ;;

    stop)
      stop_app
    ;;

    restart)
      stop_app
      start_app
    ;;

    status)
      if [ -f $PID_FILE ]
      then
          PID=`cat $PID_FILE`
          if [ -z "`ps efx | awk '{print $1}' | grep "^$PID$"`" ]
          then
              echo "Node app stopped but pid file exists"
          else
              echo "Node app running with pid $PID"

          fi
      else
          echo "Node app stopped"
      fi
    ;;

    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
    ;;
esac

